@page "/create"
@using BlazorCrudFuncionario.Enums
@using BlazorCrudFuncionario.Models;
@inject NavigationManager NavigationManager
@inject BlazorCrudFuncionario.Services.IFuncionarioServices FuncionarioServices


<h3>Cadastro</h3>

<EditForm Model="funcionario" FormName="CreateFuncionarioForm" OnValidSubmit="CreateFuncionario">

    <div class="form-group mb-3">
    <label>Nome: </label>
    <InputText id="funcionarioNome" @bind-Value="funcionario.Nome"></InputText>
    </div>

    <div class="form-group mb-3">
    <label>Cargo: </label>
    <InputSelect id="funcionarioCargo" @bind-Value="funcionario.Cargo">
            <option value="0"> </option>

                @foreach (var cargo in Enum.GetValues(typeof(Cargos)))
                {
                    <option value="@cargo">@cargo</option>
                }
    </InputSelect>
    </div>

    <div class="form-group mb-3">
        <label>Setor: </label>
        <InputSelect id="funcionarioSetor" @bind-Value="funcionario.Setor">
            <option value="0"> </option>

            @foreach (var setor in Enum.GetValues(typeof(Setores)))
            {
                <option value="@setor">@setor</option>
            }
        </InputSelect>
    </div>

    <div class="form-group mb-3">
        <label>Data de Adimissão: </label>
        <InputDate id="funcionarioAdmisaso" @bind-Value="funcionario.Admissao"></InputDate>
    </div>

    <div class="form-group mb-3">
        <label>Salario: </label>
        <InputText id="funcionarioSalario" @bind-Value="funcionario.Salario"></InputText>
    </div>

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <button class="btn btn-success" type="submit">Salvar</button>
</EditForm>



@code {
    Funcionario funcionario = new();

    async Task CreateFuncionario()
    {
        funcionario.GenerateNewId();
        await FuncionarioServices.AddFuncionario(funcionario);
        NavigationManager.NavigateTo("/");
    }
}
